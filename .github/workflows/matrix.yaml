name: Matrix

on:
  workflow_dispatch:

jobs:
  build:
    name: Publish ${{ matrix.os }} / py${{ matrix.python }} / ${{ matrix.variant }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, macos-15]
        variant: [manylinux, musllinux]
        python: [38, 39]
        exclude:
          - os: macos-15
            variant: musllinux
    
    steps:
      - uses: actions/checkout@v4

      - name: Configuration
        id: configuration
        run: |
          # The build setting for cibuildwheel
          if [ "${{ matrix.os }}" != "macos-15" ]; then
            BUILD_VARIANT="cp${{ matrix.python }}-${{ matrix.variant }}_*"
          else
            BUILD_VARIANT="cp${{ matrix.python }}-*"
          fi
          echo "build_variant=$BUILD_VARIANT" >> $GITHUB_OUTPUT
          
          # The script to run to install dependencies in the platform-specific cibuildwheel container
          if [ "${{ matrix.os }}" == "ubuntu-24.04-arm" ]; then
            if [ "${{ matrix.variant }}" == "manylinux" ]; then
              BEFORE_BUILD="yum install -y clang clang-tools-extra"
            else
              BEFORE_BUILD="apk add clang clang-extra-tools"
            fi
          else
            BEFORE_BUILD=""
          fi
          echo "before_build=$BEFORE_BUILD" >> $GITHUB_OUTPUT

          # The package version
          VERSION=$(grep '^version *= *' pyproject.toml | sed -E 's/version *= *"(.*)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if exact wheel exists on PyPI
        id: check_pypi
        run: |
          PACKAGE_NAME="pygafro"
          VERSION="${{ steps.configuration.outputs.version }}"

          EXPECTED_PYTHON_VERSION="cp${{ matrix.python }}"

          if [ "${{ matrix.os }}" != "macos-15" ]; then
            EXPECTED_VARIANT="${{ matrix.variant }}"
          else
            EXPECTED_VARIANT="macos"
          fi

          if [ "${{ matrix.os }}" == "macos-15" ]; then
            EXPECTED_ARCH="arm64"
          else
            if [ "${{ matrix.os }}" == "ubuntu-24.04" ]; then
              EXPECTED_ARCH="x86_64"
            else
              EXPECTED_ARCH="aarch64"
            fi
          fi

          DESCRIPTION="$PACKAGE_NAME-$VERSION-$EXPECTED_PYTHON_VERSION-*-$EXPECTED_VARIANT_*_$EXPECTED_ARCH.whl"

          echo "Looking for '$DESCRIPTION' on PyPI..."
          FOUND=$(curl -s https://pypi.org/pypi/$PACKAGE_NAME/json | \
            jq -r --arg v "$VERSION" '.releases[$v][]? | select(.packagetype=="bdist_wheel") | .filename' | \
            grep "\-$EXPECTED_PYTHON_VERSION\-" | grep "\-$EXPECTED_VARIANT_" | grep "_$EXPECTED_ARCH" || true)

          if [ -n "$FOUND" ]; then
            echo "Exact wheel '$FOUND' already exists on PyPI. Skipping build & publish."
            echo "skip_publish=true" >> $GITHUB_OUTPUT
          else
            echo "Wheel not found â€” will build & publish."
            echo "skip_publish=false" >> $GITHUB_OUTPUT
          fi

      - name: Build wheels
        if: steps.check_pypi.outputs.skip_publish == 'false'
        run: echo "${{ steps.configuration.outputs.version }}"
        env:
          CIBW_BUILD: ${{ steps.configuration.outputs.build_variant }}
          CIBW_ENVIRONMENT: 'CXX="clang++" CC="clang"'
          CIBW_BEFORE_BUILD: ${{ steps.configuration.outputs.before_build }}
